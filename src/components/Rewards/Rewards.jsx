import React, { useEffect, useState } from "react";
import styles from "./Rewards.module.css";
import Header from "../Header/Header";

const rewards = [
  { days: 1, title: "üî• –ü–æ—á–∞—Ç–æ–∫ —î!", emoji: "üèÖ" },
  { days: 3, title: "üöÄ –†–æ–∑–≥—ñ–Ω!", emoji: "ü•â" },
  { days: 5, title: "üí™ –¢—Ä–∏–º–∞–π —Ç–µ–º–ø!", emoji: "ü•à" },
  { days: 7, title: "üéØ –¶—ñ–ª—å –±–ª–∏–∑—å–∫–æ!", emoji: "ü•á" },
  { days: 14, title: "üèÜ –ù–∞–ø–æ–ª–µ–≥–ª–∏–≤—ñ—Å—Ç—å!", emoji: "üèÜ" },
  { days: 21, title: "‚ö° –ù–µ–∑–ª–∞–º–Ω—ñ—Å—Ç—å!", emoji: "üéñÔ∏è" },
  { days: 30, title: "üëë –õ–µ–≥–µ–Ω–¥–∞!", emoji: "üëë" },
];

const RewardPage = () => {
  const [currentStreak, setCurrentStreak] = useState(0);
  const [earnedRewards, setEarnedRewards] = useState([]);

  useEffect(() => {
    const storedUser = JSON.parse(localStorage.getItem("user"));
    const userId = storedUser?.id;
    if (!userId) return;

    fetch("https://683264f0c3f2222a8cb22fc0.mockapi.io/taskforusers")
      .then((res) => res.json())
      .then((tasks) => {
        const userTasks = tasks
          .filter((task) => task.userId === String(userId) && task.completed)
          .map((task) => new Date(task.date).setHours(0, 0, 0, 0));

        const uniqueDates = [...new Set(userTasks)].sort((a, b) => a - b);

        let streak = 1;

        for (let i = uniqueDates.length - 1; i > 0; i--) {
          const diff =
            (uniqueDates[i] - uniqueDates[i - 1]) / (1000 * 60 * 60 * 24);
          if (diff === 1) {
            streak++;
          } else if (diff > 1) {
            break;
          }
        }

        setCurrentStreak(streak);

        const unlocked = rewards.filter((r) => streak >= r.days);
        setEarnedRewards(unlocked);
      });
  }, []);

  return (
    <div>
      <Header />
      <div className={styles.container}>
        <div className={`${styles.shape} ${styles.shape1}`} />
        <div className={`${styles.shape} ${styles.shape2}`} />

        <div className={styles.left}>
          <h1 className={styles.title}>–í–∞—à—ñ –≤–∏–Ω–∞–≥–æ—Ä–æ–¥–∏</h1>
          <p className={styles.description}>
            –í–∏ –º–∞—î—Ç–µ <strong>{currentStreak}</strong> –¥–Ω—ñ–≤ –±–µ–∑–ø–µ—Ä–µ—Ä–≤–Ω–æ–≥–æ
            –ø—Ä–æ–≥—Ä–µ—Å—É.
          </p>
        </div>

        <div className={styles.right}>
          <div className={styles.rewardsContainer}>
            <h2 className={styles.title}>–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è</h2>
            {earnedRewards.length > 0 ? (
              <ul className={styles.rewardsList}>
                {earnedRewards.map((reward) => (
                  <li key={reward.days} className={styles.rewardItem}>
                    <span className={styles.emoji}>{reward.emoji}</span>
                    <span className={styles.label}>
                      <strong>{reward.days} –¥–Ω—ñ–≤:</strong> {reward.title}
                    </span>
                  </li>
                ))}
              </ul>
            ) : (
              <p className={styles.noRewards}>
                –ü–æ—á–Ω—ñ—Ç—å –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è, —â–æ–± –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –Ω–∞–≥–æ—Ä–æ–¥–∏!
              </p>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default RewardPage;
